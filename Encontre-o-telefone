/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 Encontre o telefone
 Este problema foi utilizado em 151 Dojo(s).

 Em alguns lugares é comum lembrar um número do telefone associando seus dígitos a letras. Dessa maneira a expressão MY LOVE significa 69 5683. Claro que existem alguns 
 problemas, uma vez que alguns números de telefone não formam uma palavra ou uma frase e os dígitos 1 e 0 não estão associados a nenhuma letra.

 Sua tarefa é ler uma expressão e encontrar o número de telefone correspondente baseado na tabela abaixo. Uma expressão é composta por letras maiúsculas (A-Z), hifens (-) e os números 1 e 0.

 Letras  ->  Número 
 ABC    ->  2 
 DEF    ->  3 
 GHI    ->  4 
 JKL    ->  5 
 MNO    ->  6 
 PQRS    ->  7 
 TUV    ->  8 
 WXYZ   ->  9 

 Entrada
 A entrada consiste de um conjunto de expressões. Cada expressão está sozinha em uma linha e possui C caracteres, onde 1 ≤ C ≤ 30. A entrada é terminada por fim de arquivo (EOF).
 Saída
 Para cada expressão você deve imprimir o número de telefone correspondente.
 Exemplo de entrada:
 1-HOME-SWEET-HOME 
 MY-MISERABLE-JOB
 Saída correspondente:
 1-4663-79338-4663 
 69-647372253-562

 Curiosidades
 A frase "The quick brown fox jumps over the lazy dog" é um pangrama (frase com sentido em que são usadas todas as letras do alfabeto de determinada língua) da língua inglesa.
 */
package encontre.o.telefone;

/**
 *
 * @author luiz.buris
 */
public class EncontreOTelefone {

    /**
     * @param args the command line arguments
     */
//    static String[] resultado = {"1-4663-79338-4663", "69-647372253-562"};
    public static void main(String[] args) {

        String entrada = "MY-MISERABLE-JOB";
        String Saida = "";
        System.out.println("iniciando");

        for (int i = 0; i < entrada.length(); i++) {
//            System.out.println(entrada.substring(i, i + 1));

            if (entrada.substring(i, i + 1).equalsIgnoreCase("A") || entrada.substring(i, i + 1).equalsIgnoreCase("B") || entrada.substring(i, i + 1).equalsIgnoreCase("C")) {
//                System.out.println("2");
                Saida = Saida + 2;
            } else if (entrada.substring(i, i + 1).equalsIgnoreCase("D") || entrada.substring(i, i + 1).equalsIgnoreCase("E") || entrada.substring(i, i + 1).equalsIgnoreCase("F")) {
//                System.out.println("3");
                Saida = Saida + 3;
            } else if (entrada.substring(i, i + 1).equalsIgnoreCase("G") || entrada.substring(i, i + 1).equalsIgnoreCase("H") || entrada.substring(i, i + 1).equalsIgnoreCase("I")) {
//                System.out.println("4");
                Saida = Saida + 4;
            } else if (entrada.substring(i, i + 1).equalsIgnoreCase("J") || entrada.substring(i, i + 1).equalsIgnoreCase("K") || entrada.substring(i, i + 1).equalsIgnoreCase("L")) {
//                System.out.println("5");
                Saida = Saida + 5;
            } else if (entrada.substring(i, i + 1).equalsIgnoreCase("M") || entrada.substring(i, i + 1).equalsIgnoreCase("N") || entrada.substring(i, i + 1).equalsIgnoreCase("O")) {
//                System.out.println("6");
                Saida = Saida + 6;
            } else if (entrada.substring(i, i + 1).equalsIgnoreCase("P") || entrada.substring(i, i + 1).equalsIgnoreCase("Q") || entrada.substring(i, i + 1).equalsIgnoreCase("R") || entrada.substring(i, i + 1).equalsIgnoreCase("S")) {
//                System.out.println("7");
                Saida = Saida + 7;
            } else if (entrada.substring(i, i + 1).equalsIgnoreCase("T") || entrada.substring(i, i + 1).equalsIgnoreCase("U") || entrada.substring(i, i + 1).equalsIgnoreCase("V")) {
//                System.out.println("8");
                Saida = Saida + 8;
            } else if (entrada.substring(i, i + 1).equalsIgnoreCase("W") || entrada.substring(i, i + 1).equalsIgnoreCase("X") || entrada.substring(i, i + 1).equalsIgnoreCase("Y") || entrada.substring(i, i + 1).equalsIgnoreCase("Z")) {
//                System.out.println("9");
                Saida = Saida + 9;
            } else {
                Saida = Saida + entrada.substring(i, i + 1);
            }
        }
        System.out.println(Saida.trim().replaceAll(" ", "-"));
//        for (int j = 0; j < resultado.length; j++) {
//            if (resultado[j].equalsIgnoreCase(Saida.trim().replaceAll(" ", "-"))) {
//                System.out.println("");
//                System.out.println("OK reultado certo");
//
//            } else {
//                System.out.println("Não obteve resiltado");
//
//            }
//        }
    }

}
